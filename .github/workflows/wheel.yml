name: "Create Python distributions"

on:
  release:
    types: [created]
  workflow_dispatch: {}

env:
  STAN_BACKEND: "CMDSTANPY"

jobs:
  make-wheels:
    name: Make ${{ matrix.os }} wheels
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["windows-latest"]
      fail-fast: false

    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v3

      - name: "Restore RTools40"
        if: startsWith(runner.os, 'Windows')
        id: cache-rtools
        uses: actions/cache@v2
        with:
          path: C:/rtools40
          key: ${{ runner.os }}-${{ env.OS_VERSION }}-rtools-v1

      - name: "Build wheels"
        uses: pypa/cibuildwheel@v2.6.0
        with:
          package-dir: python
        env:
          CIBW_ENVIRONMENT: >
            STAN_BACKEND="${{ env.STAN_BACKEND }}"
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          CIBW_BUILD: cp37-* cp38-* cp39-* cp310-*
          CIBW_SKIP: "*musllinux*"
          CIBW_ARCHS: native
          CIBW_BUILD_FRONTEND: build
          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: pytest --pyargs prophet

      - name: "Upload wheel as artifact"
        uses: actions/upload-artifact@v3
        with:
          name: artifact-${{ matrix.os }}-wheel
          path: "./**/*.whl"

  attach-artifacts:
    name: Attach Artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Upload the artifacts
        uses: skx/github-action-publish-binaries@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: "artifact-*"
